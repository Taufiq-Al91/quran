# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches:
      - master
      - development
  pull_request:
    branches:
      - master

jobs:
  build-and-unit-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with: 
          flutter-version: "3.10.3"
          channel: 'stable'
      - name: Install dependencies
        run: flutter pub get
      - name: Build and test
        run: |
          flutter build apk
          flutter test

  deploy_staging:
    runs-on: ubuntu-latest
    needs: build-and-unit-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}
          service_account_key: ${{ secrets.GOOGLE_CLOUD_SERVICE_ACCOUNT_KEY }}
      - name: Authenticate with Firebase
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.FIREBASE_TOKEN }}
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with: 
          flutter-version: "3.10.3"
          channel: 'stable'
      - name: Install dependencies
        run: flutter pub get
      - name: Deploy to Firebase Test Lab
        run: |
          flutter build apk
          gcloud firebase test android run \
            --type robo \
            --app build/app/outputs/flutter-apk/app-release.apk \
            --device model=crownqlteue,version=29,locale=en,orientation=portrait  \
            --device model=cactus,version=27,locale=en,orientation=portrait  \
            --device model=gts3lltevzw,version=28,locale=en,orientation=portrait  \
            --device model=x1q,version=29,locale=en,orientation=portrait  \
            --device model=vivo_1906,version=29,locale=en,orientation=portrait  \
            --timeout 90s \
            --client-details matrixLabel="Testing matrix label"

  deploy_production:
    runs-on: ubuntu-latest
    needs: build-and-unit-test
    steps:
      - name: Deploy to Production
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          # Install Fastlane
          bundle install
          # Authenticate with Google Play
          fastlane supply init --json_key @/path/to/your/google-play-key.json --package_name com.azharproject.quran
          # Upload the APK to Play Store
          fastlane supply --track beta --skip_upload_metadata --skip_upload_images
          # Deploy
          fastlane deploy
